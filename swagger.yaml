openapi: 3.0.1
info:
  title: defaultTitle
  description: defaultDescription
  version: '0.1'
servers:
  - url: 'https://openhack20task2.azurewebsites.net'
paths:
  /api/CreateRating:
    post:
      description: Create Rating
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                locationName:
                  type: string
                productId:
                  type: string
                rating:
                  type: integer
                id:
                  type: string
                userId:
                  type: string
                userNotes:
                  type: string
                timestamp:
                  type: string
            examples:
              '0':
                value: "{\r\n    \"id\": \"1111\",\r\n    \"userId\": \"cc20a6fb-a91f-4192-874d-132493685376\",\r\n    \"productId\": \"4c25613a-a3c2-4ef3-8e02-9c335eb23204\",\r\n    \"timestamp\": \"2018-05-21T21:27:47Z\",\r\n    \"locationName\": \"Sample ice cream shop\",\r\n    \"rating\": 5,\r\n    \"userNotes\": \"I love the subtle notes of orange in this ice cream!\"\r\n}\r\n"
      responses:
        '200':
          description: Rating is normally created.
          content:
            application/json; charset=utf-8:
              schema:
                type: string
              examples: {}
  /api/GetRating/{ratingId}:
    get:
      description: Get specific rating of provided ratingId
      parameters:
        - in: path
          name: ratingId
          schema:
            type: string
          required: true
          description: Rating ID of the rating to get
      responses:
        '200':
          description: Content of the rating
          content:
            text/plain; charset=utf-8:
              schema:
                type: object
                properties:
                  locationName:
                    type: string
                  productId:
                    type: string
                  rating:
                    type: integer
                  id:
                    type: string
                  userId:
                    type: string
                  userNotes:
                    type: string
                  timestamp:
                    type: string
              examples:
                '0':
                  value: "{\r\n    \"id\": \"1111\",\r\n    \"userId\": \"cc20a6fb-a91f-4192-874d-132493685376\",\r\n    \"productId\": \"4c25613a-a3c2-4ef3-8e02-9c335eb23204\",\r\n    \"timestamp\": \"2018-05-21T21:27:47Z\",\r\n    \"locationName\": \"Sample ice cream shop\",\r\n    \"rating\": 5,\r\n    \"userNotes\": \"I love the subtle notes of orange in this ice cream!\"\r\n}\r\n"
  /api/GetRatings/{userId}:
    get:
      description: Get ratings associated with the user identified by userId
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: User ID of the user to get
      responses:
        '200':
          description: Content of ratings
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    locationName:
                      type: string
                    productId:
                      type: string
                    rating:
                      type: integer
                    id:
                      type: string
                    userId:
                      type: string
                    userNotes:
                      type: string
                    timestamp:
                      type: string
              examples: {}